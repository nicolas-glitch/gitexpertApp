{"version":3,"sources":["components/AddCategories.js","helpers/handsCat.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGif.js","GifExpertApp.js","index.js"],"names":["AddCategories","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","c","type","value","onChange","target","handsCat","category","a","url","encodeURI","fetch","res","json","data","gif","map","d","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","categorie","loading","state","setstate","useEffect","then","imgs","useFetchGif","img","i","GifExpertApp","setCategory","ReactDOM","render","document","getElementById"],"mappings":"qMAkCeA,EA/BQ,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cACrB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAYA,OACI,sBAAMC,SATW,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAe,SAAAS,GAAC,OAAKP,GAAL,mBAAoBO,OACpCN,EAAc,MAKlB,SACI,uBACIO,KAAK,OACLC,MAAST,EACTU,SAhBQ,SAACP,GACjBF,EAAcE,EAAEQ,OAAOF,a,+BCHjBG,EAAQ,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEfC,EAFe,iDAEiCC,UAAWH,GAF5C,+DAGHI,MAAMF,GAHH,cAGfG,EAHe,gBAIAA,EAAIC,OAJJ,uBAIdC,EAJc,EAIdA,KAEDC,EAAMD,EAAKE,KAAK,SAAAC,GAAO,IAAD,EACxB,MAAO,CACHC,GAAID,EAAEC,GACNC,MAAOF,EAAEE,MACTV,IAAG,UAAEQ,EAAEG,cAAJ,aAAE,EAAUC,iBAAiBZ,QAVnB,kBAcdM,GAdc,4CAAH,sDCSPO,EAVM,SAAC,GAAiB,IAAhBH,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAEzB,OACI,sBAAKc,UAAU,OAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QC0BDO,EA7BE,SAAC,GAAiB,IAAhBC,EAAe,EAAfA,UAEf,ECHuB,SAACA,GACxB,MAA0BlC,mBAAS,CAC/BqB,KAAM,GACNc,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAgBA,OAXAC,qBAAU,WACNzB,EAASqB,GAAWK,MAChB,SAAAC,GACIH,EAAS,CACLhB,KAAMmB,EACNL,SAAS,SAGvB,CAACD,IAGIE,EDdqBK,CAAYP,GAA5BQ,EAAZ,EAAOrB,KAAUc,EAAjB,EAAiBA,QAMjB,OACI,qCACE,6BAAKD,IAEJC,GAAW,mBAAGL,UAAU,sCAAb,wBACd,qBAAKA,UAAU,8CAAf,SAIYY,EAAInB,KAAK,SAAAoB,GAAC,OAAI,cAAE,EAAF,eAENA,GADEA,EAAElB,aEWjBmB,EA3BM,WAEb,MAAgC5C,mBAAS,CAAC,cAA1C,mBAAOc,EAAP,KAAiB+B,EAAjB,KASA,OACI,qCACA,8CACA,uBACA,cAAE,EAAF,CAAiB9C,cAAiB8C,IAClC,6BAEQ/B,EAASS,KAAI,SAAAf,GAAC,OAAI,cAAC,EAAD,CAAiB0B,UAAa1B,GAAhBA,Y,YChBpDsC,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.f3daaa24.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n const AddCategories = ({setCategories}) => {\r\n    const [inputValue, setInputValue] = useState('');\r\n    const handleInput = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n    const handleSumbit = (e) => {\r\n        e.preventDefault();\r\n        if(inputValue.trim().length > 2){\r\n            setCategories( c => [inputValue, ...c] );\r\n            setInputValue('')\r\n        }\r\n        \r\n    }\r\n    return (\r\n        <form onSubmit = { handleSumbit}>\r\n            <input\r\n                type='text'\r\n                value = {inputValue}\r\n                onChange = {handleInput}\r\n            >\r\n            </input>\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategories.propTypes = {\r\n\r\n    setCategories: PropTypes.func.isRequired\r\n\r\n}\r\n\r\nexport default AddCategories;\r\n","\r\n\r\n\r\nexport const  handsCat = async(category) =>{\r\n        \r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI( category )}&limit=10&api_key=ewNTkw3eV7RzFU7lSxkfrVEYdWb0pPOO`\r\n    const res = await fetch(url);\r\n    const {data} = await res.json();\r\n\r\n    const gif = data.map( d  => {\r\n        return {\r\n            id: d.id,\r\n            title: d.title,\r\n            url: d.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gif;\r\n\r\n}","import React from 'react'\r\n\r\n const GifGridItem = ({title,url}) => {\r\n\r\n    return (\r\n        <div className=\"card\">\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GifGridItem;","import React from 'react'\r\nimport { useFetchGif } from '../hooks/useFetchGif'\r\nimport GifGridItem from './GifGridItem';\r\n\r\n const GifGrid = ({categorie}) => {\r\n\r\n    const {data:img, loading} = useFetchGif(categorie);\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n          <h4>{categorie}</h4>\r\n\r\n          {loading && <p className=\"animate__animated animate__animated\">Loading...</p>}\r\n        <div className=\"card-grid animate__animated animate__fadeIn\">\r\n            \r\n            \r\n                {\r\n                    img.map( i => < GifGridItem \r\n                        key= {i.id}\r\n                        {...i}\r\n                     />)\r\n                }\r\n\r\n        </div>\r\n        </>\r\n  \r\n    )\r\n}\r\n\r\nexport default GifGrid","import { useEffect, useState } from \"react\"\r\nimport {handsCat} from '../helpers/handsCat'\r\n\r\nexport const useFetchGif = (categorie) => {\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    })\r\n    \r\n    useEffect(() => {\r\n        handsCat(categorie).then(\r\n            imgs =>{\r\n                setstate({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n            })    \r\n    },[categorie])\r\n\r\n\r\n    return state;\r\n}\r\n","import React, {useState} from 'react';\r\nimport AddCategories from './components/AddCategories';\r\nimport GifGrid from './components/GifGrid';\r\n\r\n\r\n\r\nconst GifExpertApp = () => {\r\n        \r\n        const [category, setCategory] = useState(['One punch']);\r\n\r\n\r\n\r\n        // const categoryAdd = () =>{ \r\n        //     setCategory(cat => ['naruto',...cat]);\r\n            \r\n        // };\r\n            \r\n        return(\r\n            <>\r\n            <h2>GifExpertApp</h2>\r\n            <hr />\r\n            < AddCategories  setCategories = {setCategory}/>\r\n            <ol>\r\n                {\r\n                    category.map(c => <GifGrid key={c} categorie = {c} />)\r\n                }\r\n\r\n            </ol>\r\n            </>\r\n        );\r\n}\r\n\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\nimport  'animate.css';\n\n\n\nReactDOM.render(\n\n    <GifExpertApp />,\n\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}